- name: subscriptie uitetten
  hosts:  # Hosts waarop je deze taak wilt uitvoeren
    - pm01
    - pm02
    - pm03
  become: true  # root
  tasks:
    - name: Voeg Proxmox no-subscription repository toe
      blockinfile:
        path: /etc/apt/sources.list
        insertbefore: '## Main'  # toevoegen
        block: |
          # Proxmox VE pve-no-subscription repository provided by proxmox.com,
          # NOT recommended for production use
          deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription
          #normalle pakketten van debian
          deb http://deb.debian.org/debian buster main contrib non-free
          deb-src http://deb.debian.org/debian buster main contrib non-free
    - name: pve-enterprise repository weghalen
      lineinfile:
        path: /etc/apt/sources.list.d/pve-enterprise.list
        regexp: '^deb'
        line: '# deb'
        state: present

- name: Installeren van Docker op de cluster...
  hosts: pm01
  become: true
  tasks:
    - name: Updaten van packets...
      apt:
        update_cache: yes

    - name: Install Python 3 and pip
      become: yes
      become_user: root
      command: apt install -y python3 python3-pip

    - name: Installeren van Docker...
      apt:
        name: docker.io
        state: present

    - name: Start Docker-service
      service:
        name: docker
        state: started
- name: Installeer pip
  hosts: pm01
  become: true

  tasks:
    - name: Download get-pip.py
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /tmp/get-pip.py

    - name: Voer get-pip.py uit
      command: /usr/bin/python3 /tmp/get-pip.py

    - name: Installeer setuptools
      pip:
        name: setuptools
        state: present

- name: Creëren van de Containers met WordPress...
  hosts: pm01
  gather_facts: yes

  tasks:
    - name: Installeer Docker SDK voor Python
      pip:
        name: docker
        state: present

    - name: Detecteer het pad naar Python
      command: "which python3"
      register: python_path_result

    - set_fact:
        ansible_python_interpreter: "{{ python_path_result.stdout }}"

    - name: WordPress Containers aanmaken
      docker_container:
        name: "wordpress_container_{{ item }}"
        image: wordpress
        memory: 1g
        cpuset_cpus: "1"
        volumes:
          - /home/gebruiker/wordpress:/var/www/html
        ports:
          - "{{ 32767 + item }}:80"
      loop: "{{ range(1, 11) | list }}"

    - name: Creëer een aangepast netwerk
      command: docker network create --driver bridge container_netwerk
      failed_when: "'network with name container_netwerk already exists' not in result.stderr"
      args:
        warn: no
      register: result

    - name: Voeg containers toe aan aangepast netwerk
      command: docker network connect container_netwerk wordpress_container_{{ item }}
      loop: "{{ range(1, 11) | list }}"
      ignore_errors: yes
      failed_when: false

    - name: Controleer of alle containers zijn toegevoegd aan het aangepaste netwerk
      command: docker network inspect container_netwerk
      register: network_inspect

    - name: network inspecten output
      set_fact:
        network_containers: "{{ network_inspect.stdout | from_json | json_query('[].Containers[].Name') }}"

    - name: Controleer of alle containers zijn toegevoegd
      fail:
        msg: "Niet alle containers zijn toegevoegd aan het aangepaste netwerk"
      when: 'wordpress_container_{{ item }}' not in network_containers
      with_sequence: start=1 end=10


    - name: Beperk de bandbreedte van de containers
      command: >
        tc qdisc add dev eth0 root tbf rate 400mbit burst 8mbit latency 50ms
      args:
        executable: /sbin/tc


    - name: Genereren van SSL-certificaten...
      command: >
        openssl req -x509 -nodes -newkey rsa:4096
        -keyout /etc/ssl/certificaten/key.pem
        -out /etc/ssl/certificaten/cert.pem
      args:
        creates: /etc/ssl/certificaten/

    - name: Voeg gebruikers toe aan de containers
      shell: >
        docker exec -it wordpress_container_{{ item }} /bin/bash -c "
        adduser gebruiker1 &&
        adduser gebruiker2 &&
        openssl req -x509 -nodes -newkey rsa:4096 -keyout /home/gebruiker1/key.pem -out /home/gebruiker1/cert.pem &&
        openssl req -x509 -nodes -newkey rsa:4096 -keyout /home/gebruiker2/key.pem -out /home/gebruiker2/cert.pem
        "
      loop: "{{ range(1, 11) | list }}"

- name: firewall-script uitvoeren voor in de containers
  hosts: pm01
  tasks:
    - name: Kopieer firewall-script naar de containers
      copy:
        src: /home/geenboom1/ansible_wordpress_project/firewall_script.sh
        dest: /tmp/firewall_script.sh

    - name: Voer het firewall-script uit
      command: docker exec -it wordpress_container_{{ item }} /bin/bash -c "/tmp/firewall_script.sh"
      loop: "{{ range(1, 11) | list }}"
