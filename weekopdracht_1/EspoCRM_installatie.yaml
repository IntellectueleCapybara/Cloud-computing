
###
### de VMs starten
###
- name: VM starten op Proxmox 1
  hosts: pm01
  tasks:
    - name: Start VM on pm01
      shell: "qm status 100 | grep -q 'status: running' || qm start 100"

- name: VM starten op Proxmox 2
  hosts: pm02
  tasks:
    - name: Start VM on pm02
      shell: "qm status 101 | grep -q 'status: running' || qm start 101"

- name: VM starten op Proxmox 3
  hosts: pm03
  tasks:
    - name: Start VM on pm03
      shell: "qm status 102 | grep -q 'status: running' || qm start 102"

###
### de VMs wachten tot ze gestart zijn ### code op internet
###

- name: wachten op boot
  hosts: localhost
  gather_facts: no
  become: yes
  tasks:
    - name: Wait for VMs to boot
      local_action:
        module: wait_for_connection
        delay: 5
        timeout: 300
      with_items:
        - "espocrmvm1"
        - "espocrmvm2"
        - "espocrmvm3"

###
### de VMs updaten en rebooten
###

- name: Automate EspoCRM Deployment
  hosts:
    - espocrmvm1
    - espocrmvm2
    - espocrmvm3
  gather_facts: no
  become: yes
  tasks:

    - name: Update VMs
      apt:
        update_cache: yes
        upgrade: yes

    - name: Reboot
      shell: reboot
      async: 1
      poll: 0

- name: wachten op reboot
  hosts: localhost
  gather_facts: no
  become: yes
  tasks:
    - name: Wait for VMs to boot
      local_action:
        module: wait_for_connection
        delay: 5
        timeout: 300
        state: started
      with_items:
        - "espocrmvm1"
        - "espocrmvm2"
        - "espocrmvm3"

###
### high availability toevoegen aan de vms
###

- name: VM starten op Proxmox 1
  hosts: pm01
  tasks:
    - name: Configure HA for VMs
      command:
        cmd: "qm set {{ item.vmid }} --ha-state {{ item.ha_state }} --ha-resources {{ item.ha_resources }}"
      loop:
        - { vmid: 101, ha_state: "enabled", ha_resources: "memory=2048,cpu=2" }

- name: VM starten op Proxmox 1
  hosts: pm01
  tasks:
    - name: Configure HA for VMs
      command:
        cmd: "qm set {{ item.vmid }} --ha-state {{ item.ha_state }} --ha-resources {{ item.ha_resources }}"
      loop:
        - { vmid: 102, ha_state: "enabled", ha_resources: "memory=2048,cpu=2" }

- name: VM starten op Proxmox 1
  hosts: pm01
  tasks:
    - name: Configure HA for VMs
      command:
        cmd: "qm set {{ item.vmid }} --ha-state {{ item.ha_state }} --ha-resources {{ item.ha_resources }}"
      loop:
        - { vmid: 103, ha_state: "enabled", ha_resources: "memory=2048,cpu=2" }

###
### Twee keer per dag moet er een snapshot van de VM worden gemaakt.
###

- name: Create snapshot script on Proxmox hosts
  hosts: pm01,pm02,pm03
  become: yes
  tasks:
    - name: Create snapshot script
      copy:
        dest: "/root/snapshot_vms.sh"
        content: |
          #!/bin/bash
          for vmid in 100 101 102; do
            pct snapshot $vmid daily_snapshot
          done
        mode: 0755

    - name: Create cron job for snapshotting VMs twice a day
      cron:
        name: "snapshot job"
        minute: "0"
        hour: "*/12"
        job: "/root/snapshot_vms.sh"


  ###
  ### monitor server aanmaken
  ###

    - name: monitor server toevoegen
      shell: wget -O /tmp/netdata-kickstart.sh https://my-netdata.io/kickstart.sh && sh /tmp/netdata-kickstart.sh --nightly-channel --claim-token _ExXqLL6xuhgP-in2_scLbHnb9CpJhFWdyRDv0_9va-y0oDh_7C1nIzPYKTrswU_jjBaTVyw3uDv9HZEOwJDLAr3GPN77vDROxZRyTiTpenkwEiBZSb_BoNBOp9iFXMdPljhxvY --claim-rooms 07aa6c7e-53f3-4ba3-a3b2-96ce6bf53001 --claim-url https://app.netdata.cloud


- name: EspoCRM VMs instellen
  hosts: espocrm_vms
  become: yes

  tasks:

###
### installeren van espocrm op de vms
###

    - name: Check if EspoCRM is installed
      stat:
        path: /path/to/espocrm
      register: espocrm_dir

    - name: Install espocrm on the VMs
      shell: |
        wget https://github.com/espocrm/espocrm-installer/releases/latest/download/install.sh
        sudo bash install.sh -y --ssl --letsencrypt --domain=cloud-espocrm.com --clean
      args:
        chdir: /root
      register: espocrm_install
      when: not espocrm_dir.stat.exists

    - debug:
        var: espocrm_install.stdout_lines




