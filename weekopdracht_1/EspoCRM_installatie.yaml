###
### EspoCRM installatie
###

- name: Voeg CIFS gedeelde opslag toe aan Proxmox
  hosts:
    - pm01
    - pm02
    - pm03
  vars_prompt:
    - name: cifs_password
      prompt: "Voer het wachtwoord in voor CIFS gedeelde opslag"
      private: yes
  tasks:

    - name: Controleer of CIFS gedeelde opslag al bestaat
      shell: cat /etc/pve/storage.cfg | grep shared_storage
      register: shared_storage_check
      ignore_errors: yes

    - name: Voer het pvesm commando uit om CIFS gedeelde opslag toe te voegen
      command: pvesm add cifs shared_storage --server 172.16.0.100 --share 422422 --username student422422 --password "{{ cifs_password }}"
      when: shared_storage_check.stdout == ""

    - name: Add entry to /etc/fstab for shared storage
      lineinfile:
        path: /etc/fstab
        line: "//172.16.0.100/shared_storage /shared_storage cifs username=student422422,password={{ cifs_password }},rw 0 0"
        state: present
      when: "not (lookup('file', '/etc/fstab') | regex_search('172.16.0.100/shared_storage'))"


- name: Automate EspoCRM Deployment
  hosts: localhost
  gather_facts: no
  become: yes

###
### vars gebruiken zodat dit script ook scalable is
###

  vars: #verander dit als je andere IPs hebt en andere nodenamen
    pm01: 172.16.39.70
    pm02: 172.16.39.71
    pm03: 172.16.39.72
    node1: geenboom2
    node2: geenboom3
    node3: geenboom4


###
### Wachtwoorden prompten zodat hij niet hardcoded in het script staat
###

  vars_prompt:
    - name: "api_password"
      prompt: "Enter the Proxmox API password"
      private: yes

  tasks:
    - name: Updaten van packets...
      apt:
        update_cache: yes

    - name: Install Python 3 and pip
      become: yes
      become_user: root
      command: apt install -y python3 python3-pip

    - name: Installeer proxmoxer en requests met pip
      ansible.builtin.pip:
        name:
          - proxmoxer
          - requests
        executable: pip3

    - name: installeren van community.general collectie
      ansible.builtin.command:
        cmd: ansible-galaxy collection install community.general

###
###EspoCRM VMs aanmaken met disk 50G/2 proc/2GB mem ne statische IP toekennen
###

    - name: Create VMs on pm01
      proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ pm01 }}"
        node: "{{ node1 }}"
        vmid: "{{ item.vmid }}"
        name: "{{ item.hostname }}"
        memory: 2048
        cores: 2
        net: '{"net0":"virtio,bridge=vmbr0"}'
        virtio: '{"virtio0":"shared_storage:50,format=qcow2"}'
        onboot: yes
        ostype: l26 # Ubuntu 20.04 LTS
      loop:
        - { vmid: 100, hostname: "espocrm-vm1" }

    - name: Add static IP to VMs on pm01
      proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ pm01 }}"
        node: "{{ node1 }}"
        vmid: "{{ item.vmid }}"
        netif: '{"net0":"virtio,bridge=vmbr0,ip={{ item.ip }}/24,gw=172.16.0.1"}'
      loop:
        - { vmid: 100, ip: "172.16.39.100" }

    - name: Create VMs on pm02
      proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ pm02 }}"
        node: "{{ node2 }}"
        vmid: "{{ item.vmid }}"
        name: "{{ item.hostname }}"
        memory: 2048
        cores: 2
        net: '{"net0":"virtio,bridge=vmbr0"}'
        virtio: '{"virtio0":"shared_storage:50,format=qcow2"}'
        onboot: yes
        ostype: l26 # Ubuntu 20.04 LTS
      loop:
        - { vmid: 101, hostname: "espocrm-vm2" }

    - name: Add static IP to VMs on pm01
      proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ pm02 }}"
        node: "{{ node2 }}"
        vmid: "{{ item.vmid }}"
        netif: '{"net0":"virtio,bridge=vmbr0,ip={{ item.ip }}/24,gw=172.16.0.1"}'
      loop:
        - { vmid: 101, ip: "172.16.39.101" }

    - name: Create VMs on pm03
      proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ pm03 }}"
        node: "{{ node3 }}"
        vmid: "{{ item.vmid }}"
        name: "{{ item.hostname }}"
        memory: 2048
        cores: 2
        net: '{"net0":"virtio,bridge=vmbr0"}'
        virtio: '{"virtio0":"shared_storage:50,format=qcow2"}'
        onboot: yes
        ostype: l26 # Ubuntu 20.04 LTS
      loop:
        - { vmid: 102, hostname: "espocrm-vm3" }

    - name: Add static IP to VMs on pm01
      proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ pm03 }}"
        node: "{{ node3 }}"
        vmid: "{{ item.vmid }}"
        netif: '{"net0":"virtio,bridge=vmbr0,ip={{ item.ip }}/24,gw=172.16.0.1"}'
      loop:
        - { vmid: 102, ip: "172.16.39.102" }

###
### de VMs starten
###
    - name: Start VM on pm01
      command: qm start 100
      vars:
        api_host: pm01

    - name: Start VM on pm02
      command: qm start 101
      vars:
        api_host: pm02

    - name: Start VM on pm03
      command: qm start 102
      vars:
        api_host: pm03



###
### de VMs wachten tot ze gestart zijn
###

    - name: Wait for VMs to boot
      local_action:
        module: wait_for
        host: "{{ item }}"
        port: 22
        delay: 5
        timeout: 60
        state: started
      with_items:
        - "espocrm-vm1"
        - "espocrm-vm2"
        - "espocrm-vm3"

###
### de VMs updaten en rebooten
###

    - name: Update VMs
      apt:
        update_cache: yes
      vars:
        ansible_python_interpreter: /usr/bin/python3
      delegate_to: "{{ item }}"
      with_items:
        - "espocrm-vm1"
        - "espocrm-vm2"
        - "espocrm-vm3"

    - name: Reboot VMs
      shell: reboot
      delegate_to: "{{ item }}"
      with_items:
        - "espocrm-vm1"
        - "espocrm-vm2"
        - "espocrm-vm3"
      async: 1
      poll: 0

    - name: Wait for VMs to reboot
      local_action:
        module: wait_for
        host: "{{ item }}"
        port: 22
        delay: 5
        timeout: 180
        state: started
      with_items:
        - "espocrm-vm1"
        - "espocrm-vm2"
        - "espocrm-vm3"


###
### de nodes nu toevoegen aan het host bestand
###

    - name: Add espocrm_vms to group
      add_host:
        name: "{{ item.hostname }}"
        groups: espocrm_vms
      loop:
        - { node: pm01, vmid: 100, hostname: "espocrm-vm1" }
        - { node: pm02, vmid: 101, hostname: "espocrm-vm2" }
        - { node: pm03, vmid: 102, hostname: "espocrm-vm3" }


###
### Twee keer per dag moet er een snapshot van de VM worden gemaakt.
###

- name: Create snapshot script on Proxmox hosts
  hosts: pm01,pm02,pm03
  become: yes
  tasks:
    - name: Create snapshot script
      copy:
        dest: "/root/snapshot_vms.sh"
        content: |
          #!/bin/bash
          for vmid in 100 101 102; do
            pct snapshot $vmid daily_snapshot
          done
        mode: 0755

    - name: Create cron job for snapshotting VMs twice a day
      cron:
        name: "snapshot job"
        minute: "0"
        hour: "*/12"
        job: "/root/snapshot_vms.sh"


- name: EspoCRM VMs instellen
  hosts: espocrm_vms
  become: yes

  tasks:

###
### installeren van espocrm op de vms
###

    - name: Check if EspoCRM is installed
      stat:
        path: /path/to/espocrm
      register: espocrm_dir

    - name: Install espocrm on the VMs
      shell: |
        wget https://github.com/espocrm/espocrm-installer/releases/latest/download/install.sh
        sudo bash install.sh -y --ssl --letsencrypt --domain=cloud-espocrm.com --clean
      args:
        chdir: /root
      register: espocrm_install
      when: not espocrm_dir.stat.exists

    - debug:
        var: espocrm_install.stdout_lines




